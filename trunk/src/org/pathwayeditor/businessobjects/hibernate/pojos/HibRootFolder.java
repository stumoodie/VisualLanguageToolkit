package org.pathwayeditor.businessobjects.hibernate.pojos;

import java.io.Serializable;

import org.pathwayeditor.businessobjects.repository.IRootFolder;

// Generated 07-May-2008 22:43:44 by Hibernate Tools 3.2.1.GA

/**
 * RootFolder generated by hbm2java
 */
public class HibRootFolder extends HibFolder implements Serializable,
		IRootFolder {
	private static final long serialVersionUID = 3780104587152506255L;
	private HibRepository owningRepository = null;

	/**
	 * Default constructor that should only be used by hibernate.
	 * @deprecated should not be used by hibernate code, use one of the other constructors. 
	 */
	HibRootFolder() {
		super();
	}

	public HibRootFolder(HibRepository repository) {
		super(repository);
	}

	/**
	 * Copy constructor for hibernate object. Copies to a new repository that is
	 * provided.
	 * 
	 * @param newRepository
	 * @param other
	 */
	public HibRootFolder(HibRepository newRepository, HibRootFolder other) {
		super(other);
		setOwningRepository(newRepository);
	}

	public HibRepository getOwningRepository() {
		return this.owningRepository;
	}

	void setOwningRepository(HibRepository hibRepository) {
		this.owningRepository = hibRepository;
		setRepository(hibRepository);
	}

	public void changeRepository(HibRepository newRepository) {
		HibRepository oldRepository = this.owningRepository;
		this.owningRepository = newRepository;
		if (oldRepository != null) {
			oldRepository.setHibRootFolder(null);
		}
		if (this.owningRepository != null) {
			this.owningRepository.setHibRootFolder(this);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see org.pathwayeditor.businessobjects.hibernate.pojos.HibFolder#getPath()
	 */
	@Override
	public String getPath() {
		return "/";
	}
}
