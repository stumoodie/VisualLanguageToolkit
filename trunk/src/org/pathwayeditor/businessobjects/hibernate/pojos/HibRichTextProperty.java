package org.pathwayeditor.businessobjects.hibernate.pojos;

import java.io.Serializable;

import org.pathwayeditor.businessobjects.drawingprimitives.properties.IHtmlAnnotationProperty;
import org.pathwayeditor.businessobjects.drawingprimitives.properties.IHtmlPropertyDefinition;

/**
 * RichTextProperty generated by hbm2java
 */
public class HibRichTextProperty extends HibProperty implements Serializable, IHtmlAnnotationProperty {
	private static final long serialVersionUID = -4043561259224207426L;

	private IHtmlPropertyDefinition propertyDefinition;
	private String richTextValue;

	HibRichTextProperty() {
	}

	public HibRichTextProperty(HibCanvas hibCanvas, int creationSerial,	IHtmlPropertyDefinition defn) {
		super(hibCanvas, creationSerial);
		this.propertyDefinition = defn;
		this.richTextValue = defn.getDefaultValue();
	}

	public HibRichTextProperty(HibCanvas newCanvas, int newCreationSerial, HibRichTextProperty other) {
		super(newCanvas, newCreationSerial, other);
		this.propertyDefinition = other.getDefinition();
		this.richTextValue = other.richTextValue;
	}

	public String getRichTextValue() {
		return this.richTextValue;
	}

	public void setRichTextValue(String richTextValue) {
		if (richTextValue == null)
			throw new IllegalArgumentException(
					"richText value should not be null.");
		this.richTextValue = richTextValue;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @seeorg.pathwayeditor.businessobjects.drawingprimitives.properties.
	 * IHtmlAnnotationProperty#getDefinition()
	 */
	public IHtmlPropertyDefinition getDefinition() {
		return this.propertyDefinition;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @seeorg.pathwayeditor.businessobjects.drawingprimitives.properties.
	 * IHtmlAnnotationProperty#setValue(java.lang.String)
	 */
	public void setValue(String newText) {
		this.richTextValue = newText;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @seeorg.pathwayeditor.businessobjects.drawingprimitives.properties.
	 * IAnnotationProperty#getValue()
	 */
	public String getValue() {
		return this.richTextValue;
	}
}
