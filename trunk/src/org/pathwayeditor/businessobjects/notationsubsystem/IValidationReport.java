package org.pathwayeditor.businessobjects.notationsubsystem;

import java.util.Date;
import java.util.List;

import org.pathwayeditor.businessobjects.repository.IMap;

/**
 * Provides a snapshot of the validation status of a map.
 * Typically will be generated by a call {@link INotationValidationService#validateMap()}.
 * The validation report will not  automatically refresh by altering the map but can be refreshed by subsequent calls to
 * {@link INotationValidationService#validateMap()}.<br>
 * Typically this report will be read-only.<p>
 * Implementations should provide a toString() method that provides details of the validation report.
 * @see INotationValidationService
 * @author Richard Adams
 *
 */
public interface IValidationReport {
	
	/**
	 * Returns the date and time that this report was generated.
	 * @return A {@link Date} object, never null
	 */
	Date getValidationTime();
	
	/**
	 * Returns the IMap which has been validated.<br>
	 * This is not a snapshot of the map, the map can subsequently change after the report has been 
	 * generated.
	 * @return an {@link IMap}, never null
	 */
	IMap getMap();
	
	/**
	 * Returns an immutable<code>List</code> of individual validation errors and warnings.
	 * If no validation items are present this method will return an empty List.
	 * @return A <code>List</code> of {@link IValidationReportItems}
	 */
	List<IValidationReportItem> getValidationReportItems();
	
	/**
	 * Reports if any warnings were issued during the validation checks. These are issues that may indicate potential problems with the map, or
	 * stylistic or presentational issues that the user may wish to address.<br>
	 * Specifically, will return true if getValidationReportItems() contains at least one item of status {@link ValidationStatus.WARNING}
	 * @return true if warnings were issued, false otherwise.
	 */
	boolean hasWarnings();
	
	/**
	 * Convenience method reports if a map has passed validation checks that have been performed on it by this instance.<br>
	 * Will return <code>true</code> if getValidationReportItems() contains no items of status {@link ValidationStatus.ERROR}
	 * @return true if it has, false otherwise.
	 */
	boolean isMapValid();
	
	// I think that this could work well if we have a getLastModified() method in IMap.
	// We would then not need getValidationTime but could refer to the modified time of the map.
	/**
	 * Determines whether the report is still valid for the map.
	 * If the map is modified during the validation process correct behaviour is not guaranteed.
	 * It is up to the client to ensure the map is not modified during generation of the validation report.
	 * @return <code>true</code> if the map content has not changed since the report  was generated or
	 * <code>false</code> if it has ( and hence the report is potentially stale ).
	 */
	boolean isReportCurrent();
	
	
	
	
	
	
	
	
	

}
