package org.pathwayeditor.businessobjects.hibernate.pojos;

import org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminus;
import org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator;
import org.pathwayeditor.businessobjects.drawingprimitives.attributes.LineStyle;
import org.pathwayeditor.businessobjects.drawingprimitives.attributes.RGB;
import org.pathwayeditor.businessobjects.drawingprimitives.attributes.Size;
import org.pathwayeditor.businessobjects.typedefn.IShapeObjectType;


// Generated 07-May-2008 22:43:44 by Hibernate Tools 3.2.1.GA



/**
 * LinkTerminusDecorator generated by hbm2java
 */
public class HibLinkTerminusDecorator  implements ILinkTerminusDecorator , java.io.Serializable {


     private Long id;
     private HibLinkTerminus hibLinkTerminus;
     private short shapeType;
     private int fillRed;
     private int fillGreen;
     private int fillBlue;
     private int lineRed;
     private int lineGreen;
     private int lineBlue;
     private int lineWidth;
     private LineStyle lineStyle;
     private int width;
     private int height;

    public HibLinkTerminusDecorator() {
    }

    public HibLinkTerminusDecorator(HibLinkTerminus hibLinkTerminus, short shapeType, int fillRed, int fillGreen, int fillBlue, int lineRed, int lineGreen, int lineBlue, int lineWidth, LineStyle lineStyle, int width, int height) {
       this.hibLinkTerminus = hibLinkTerminus;
       this.shapeType = shapeType;
       this.fillRed = fillRed;
       this.fillGreen = fillGreen;
       this.fillBlue = fillBlue;
       this.lineRed = lineRed;
       this.lineGreen = lineGreen;
       this.lineBlue = lineBlue;
       this.lineWidth = lineWidth;
       this.lineStyle = lineStyle;
       this.width = width;
       this.height = height;
    }
   
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    public HibLinkTerminus getLinkTerminus() {
        return this.hibLinkTerminus;
    }
    
    public void setLinkTerminus(HibLinkTerminus hibLinkTerminus) {
        this.hibLinkTerminus = hibLinkTerminus;
    }
    public short getShapeType() {
        return this.shapeType;
    }
    
    public void setShapeType(short shapeType) {
        this.shapeType = shapeType;
    }
    public int getFillRed() {
        return this.fillRed;
    }
    
    public void setFillRed(int fillRed) {
        this.fillRed = fillRed;
    }
    public int getFillGreen() {
        return this.fillGreen;
    }
    
    public void setFillGreen(int fillGreen) {
        this.fillGreen = fillGreen;
    }
    public int getFillBlue() {
        return this.fillBlue;
    }
    
    public void setFillBlue(int fillBlue) {
        this.fillBlue = fillBlue;
    }
    public int getLineRed() {
        return this.lineRed;
    }
    
    public void setLineRed(int lineRed) {
        this.lineRed = lineRed;
    }
    public int getLineGreen() {
        return this.lineGreen;
    }
    
    public void setLineGreen(int lineGreen) {
        this.lineGreen = lineGreen;
    }
    public int getLineBlue() {
        return this.lineBlue;
    }
    
    public void setLineBlue(int lineBlue) {
        this.lineBlue = lineBlue;
    }
    public int getLineWidth() {
        return this.lineWidth;
    }
    
    public void setLineWidth(int lineWidth) {
        this.lineWidth = lineWidth;
    }
    
    public int getWidth() {
        return this.width;
    }
    
    public void setWidth(int width) {
        this.width = width;
    }
    public int getHeight() {
        return this.height;
    }
    
    public void setHeight(int height) {
        this.height = height;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof HibLinkTerminusDecorator) ) return false;
		 HibLinkTerminusDecorator castOther = ( HibLinkTerminusDecorator ) other; 
         
		 return ( (this.getLinkTerminus()==castOther.getLinkTerminus()) || ( this.getLinkTerminus()!=null && castOther.getLinkTerminus()!=null && this.getLinkTerminus().equals(castOther.getLinkTerminus()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getLinkTerminus() == null ? 0 : this.getLinkTerminus().hashCode() );
         
         return result;
   }

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getFillColor()
 */
public RGB getFillColor() {
	return new RGB ( this.fillRed , this.fillGreen , this.fillBlue);
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getLineColor()
 */
public RGB getLineColor() {
	return new RGB ( this.lineRed , this.lineBlue , this.lineBlue ) ;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getObjectType()
 */
public IShapeObjectType getObjectType() {
	// TODO Auto-generated method stub
	return null;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getOwningLinkTerminus()
 */
public ILinkTerminus getOwningLinkTerminus() {
	return this.hibLinkTerminus;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getSize()
 */
public Size getSize() {
	return new Size ( this.height , this.width);
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#setFillColor(org.pathwayeditor.businessobjects.drawingprimitives.attributes.RGB)
 */
public void setFillColor(RGB newColor) {
	if ( newColor == null )
		throw new IllegalArgumentException () ;
	
	this.fillRed = newColor.getRed() ;
	this.fillGreen = newColor.getGreen() ;
	this.fillBlue = newColor.getBlue() ;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#setLineColor(org.pathwayeditor.businessobjects.drawingprimitives.attributes.RGB)
 */
public void setLineColor(RGB newColor) {
	if ( newColor == null )
		throw new IllegalArgumentException () ;
	
	this.lineRed = newColor.getRed() ;
	this.lineGreen = newColor.getGreen() ;
	this.lineBlue = newColor.getBlue() ;	
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#setSize(org.pathwayeditor.businessobjects.drawingprimitives.attributes.Size)
 */
public void setSize(Size newSize) {
	if ( newSize == null )
		throw new IllegalArgumentException () ;

	this.height = newSize.getHeight() ;
	this.width = newSize.getWidth() ;
	
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getLineSize()
 */
public int getLineSize() {
	return this.lineWidth;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#setLineSize()
 */
public void setLineSize(int newLineSize) {
	this.lineWidth = newLineSize ;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#setLineStyle(org.pathwayeditor.businessobjects.drawingprimitives.attributes.LineStyle)
 */
public void setLineStyle(LineStyle lineStyle) {
	if ( lineStyle == null )
		throw new IllegalArgumentException ("Line style cannot be null." ) ;
	this.lineStyle = lineStyle ;
}

/* (non-Javadoc)
 * @see org.pathwayeditor.businessobjects.drawingprimitives.ILinkTerminusDecorator#getLineStyle()
 */
public LineStyle getLineStyle() {
	return lineStyle;
}   


}


