<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 04-May-2008 01:27:28 by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping>
    <class name="org.pathwayeditor.businessobjects.hibernate.pojos.Shape" table="shape">
    	<meta attribute="class-code">
	private static final long serialVersionUID = -8557015458835029042L;

    public Shape(Shape other){
    	this.XPosition = other.XPosition;
    	this.YPosition = other.YPosition;
    	this.width = other.width;
    	this.height = other.height;
    	this.objectType = other.objectType;
    	this.name = other.name;
    	this.description = other.description;
    	this.detailedDescription = other.detailedDescription;
    	this.url = other.url;
    	this.fillRed = other.fillRed;
    	this.fillGreen = other.fillGreen;
    	this.fillBlue = other.fillBlue;
    	this.lineRed = other.lineRed;
    	this.lineGreen = other.lineGreen;
    	this.lineBlue = other.lineBlue;
    	this.lineStyle = other.lineStyle;
    	this.lineWidth = other.lineWidth;
    	this.padding = other.padding;
    	for(NonRootShape childShape : other.childShapes){
    		this.childShapes.add(new NonRootShape(this, childShape));
    	}
    	//TODO: Copy properties!
    }

     void addChildShape(NonRootShape newChildShape){
    	 if(newChildShape == null) throw new IllegalArgumentException("newChildShape cannot be null");
    	 
    	 Shape oldParentShape = newChildShape.getParentShape();
    	 if(oldParentShape != null){
    		 oldParentShape.childShapes.remove(newChildShape);
    	 }
    	 this.childShapes.add(newChildShape);
    	 newChildShape.setParentShape(this);
     }

     void removeChildShape(NonRootShape childShape){
    	 if(childShape == null) throw new IllegalArgumentException("childShape cannot be null");
    	 if(childShape.getParentShape() != this) throw new IllegalArgumentException("childShape must be a child of this folder");
    	 
    	 this.childShapes.remove(childShape);
    	 childShape.setParentShape(null);
     }

    	</meta>
        <id name="id" type="java.lang.Long">
            <column name="id" />
            <generator class="native" />
        </id>
        <property name="XPosition" type="int">
            <column name="x_position" not-null="true" />
        </property>
        <property name="YPosition" type="int">
            <column name="y_position" not-null="true" />
        </property>
        <property name="width" type="int">
            <column name="width" not-null="true" />
        </property>
        <property name="height" type="int">
            <column name="height" not-null="true" />
        </property>

        <many-to-one name="objectType" class="org.pathwayeditor.businessobjects.hibernate.pojos.ObjectType" fetch="select">
	       	<meta attribute="scope-set"></meta>
        	<column name="object_type_id" not-null="true" />
         </many-to-one>
       	<property name="name" type="string">
	        <column name="name" length="128" not-null="true" />
        </property>
       	<property name="description" type="string">
           	<column name="description" length="2048" not-null="true" />
	    </property>
        <property name="detailedDescription" type="string">
      	    <column name="detailed_description" not-null="true" />
       	</property>
       	<property name="url" type="string">
           	<column name="url" length="2048" not-null="true" />
       	</property>
       	<property name="fillRed" type="int">
           	<column name="fill_red" not-null="true" />
	    </property>
        <property name="fillGreen" type="int">
      	    <column name="fill_green" not-null="true" />
       	</property>
       	<property name="fillBlue" type="int">
           	<column name="fill_blue" not-null="true" />
       	</property>
       	<property name="lineRed" type="int">
           	<column name="line_red" not-null="true" />
       	</property>
       	<property name="lineGreen" type="int">
           	<column name="line_green" not-null="true" />
       	</property>
       	<property name="lineBlue" type="int">
           	<column name="line_blue" not-null="true" />
       	</property>
       	<property name="lineStyle" type="int">
           	<column name="line_style" not-null="true" />
       	</property>
       	<property name="lineWidth" type="int">
           	<column name="line_width" not-null="true" />
       	</property>
       	<property name="padding" type="int">
           	<column name="padding" not-null="true" />
       	</property>
       	<property name="shapeType" type="short">
           	<column name="shape_type" not-null="true" />
       	</property>
       	<list name="childShapes" inverse="true">
           	<key>
               	<column name="parent_id" />
           	</key>
           	<list-index>
	           	<column name="child_index" not-null="true" />
           	</list-index>
           	<one-to-many class="org.pathwayeditor.businessobjects.hibernate.pojos.NonRootShape" />
       	</list>
        <set name="linksFromSource" inverse="true">
           	<key>
               	<column name="src_shape_id" not-null="true" />
           	</key>
           	<one-to-many class="org.pathwayeditor.businessobjects.hibernate.pojos.Link" />
       	</set>
       	<set name="linksFromTarget" inverse="true">
           	<key>
               	<column name="tgt_shape_id" not-null="true" />
           	</key>
           	<one-to-many class="org.pathwayeditor.businessobjects.hibernate.pojos.Link" />
       	</set>
       	<map name="properties" table="shapeproperty">
           	<key>
               	<column name="shape_id" not-null="true" />
           	</key>
           	<map-key type="string">
           		<column name="name" not-null="true"/>
           	</map-key>
           	<many-to-many class="org.pathwayeditor.businessobjects.hibernate.pojos.Property">
           		<column name="property_id" not-null="true"/>
           	</many-to-many>
       	</map>

        <joined-subclass name="org.pathwayeditor.businessobjects.hibernate.pojos.NonRootShape" table="nonrootshape">
	       	<meta attribute="class-code">
	private static final long serialVersionUID = 1669623191042510228L;

	public NonRootShape(Shape newParent, NonRootShape other){
		super(other);
		this.parentShape = newParent;
		this.childIndex = other.childIndex;
	}

    public void changeParentShape(Shape newParentShape){
	   Shape oldParentShape = this.parentShape;
	   this.parentShape = newParentShape;
	   if(oldParentShape != null){
		   oldParentShape.getChildShapes().remove(this);
	   }
	   if(this.parentShape != null){
		   this.parentShape.getChildShapes().add(this);
	   }
   }
        	</meta>
        	<key>
        		<column name="id" not-null="true" unique="true"/>
        	</key>
        	<properties name="xak1nonrootshape" unique="true">
		        <many-to-one name="parentShape" class="org.pathwayeditor.businessobjects.hibernate.pojos.Shape" fetch="select">
		        	<meta attribute="scope-set"></meta>
		   	    	<meta attribute="use-in-equals">true</meta>
    		        <column name="parent_id" not-null="true"/>
	        	</many-to-one>
    	    	<property name="childIndex" type="int">
    	   	    	<meta attribute="use-in-equals">true</meta>
        			<column name="child_index" not-null="true"/>
	        	</property>
        	</properties>
        </joined-subclass>
        
        <joined-subclass name="org.pathwayeditor.businessobjects.hibernate.pojos.RootShape" table="rootshape">
        	<meta attribute="class-code">
	private static final long serialVersionUID = -1230930447658096763L;

    public RootShape(Canvas newCanvas, RootShape other){
    	super(other);
    	this.canvas = newCanvas;
    	this.shapeIndex = other.shapeIndex;
    }

   public void changeCanvas(Canvas newCanvas){
	   Canvas oldCanvas = this.canvas;
	   this.canvas = newCanvas;
	   if(oldCanvas != null){
		   oldCanvas.getShapes().remove(this);
	   }
	   if(this.canvas != null){
		   this.canvas.getShapes().add(this);
	   }
   }

        	</meta>
        	<key>
        		<column name="id" not-null="true" unique="true"/>
        	</key>
        	<properties name="xak1rootshape" unique="true">
	        	<many-to-one name="canvas" class="org.pathwayeditor.businessobjects.hibernate.pojos.Canvas">
    	        	<meta attribute="scope-set"></meta>
		   	    	<meta attribute="use-in-equals">true</meta>
    	    		<column name="canvas_id" not-null="true"/>
        		</many-to-one>
        		<property name="shapeIndex" type="int">
    	   	    	<meta attribute="use-in-equals">true</meta>
        			<column name="shape_index" not-null="true"/>
	        	</property>
        	</properties>
		</joined-subclass>
		
    </class>
</hibernate-mapping>
