<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 04-May-2008 01:27:28 by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping>
    <class name="org.pathwayeditor.businessobjects.hibernate.pojos.Folder" table="folder">
    	<meta attribute="class-code">
	private static final long serialVersionUID = 8668639813872187460L;

    public Folder(Folder other){
    	for(MapDiagram diagram : mapDiagrams){
    		this.mapDiagrams.add(new MapDiagram(this, diagram));
    	}
    	for(NonRootFolder subFolder : subFolders){
    		this.subFolders.add(new NonRootFolder(this, subFolder));
    	}
    }
    
    void addSubFolder(NonRootFolder newSubFolder){
    	 if(newSubFolder == null) throw new IllegalArgumentException("newSubFolder cannot be null");
    	 
    	 Folder oldParentFolder = newSubFolder.getParentFolder();
    	 if(oldParentFolder != null){
    		 oldParentFolder.subFolders.remove(newSubFolder);
    	 }
    	 this.subFolders.add(newSubFolder);
    	 newSubFolder.setParentFolder(this);
     }

     void removeSubFolder(NonRootFolder subFolder){
    	 if(subFolder == null) throw new IllegalArgumentException("subFolder cannot be null");
    	 if(subFolder.getParentFolder() != this) throw new IllegalArgumentException("subFolder must be a child of this folder");
    	 
    	 this.subFolders.remove(subFolder);
    	 subFolder.setParentFolder(null);
     }
   
    	</meta>
    	
        <id name="id" type="java.lang.Long">
   	    	<meta attribute="use-in-tostring">true</meta>
	       	<meta attribute="scope-set"></meta>
            <column name="id" />
            <generator class="native" />
        </id>
        <set name="mapDiagrams" inverse="true" cascade="all,delete-orphan">
        	<meta attribute="scope-set"></meta>
            <key>
                <column name="folder_id" not-null="true" />
            </key>
            <one-to-many class="org.pathwayeditor.businessobjects.hibernate.pojos.MapDiagram" />
        </set>
        <set name="subFolders" inverse="true" cascade="all,delete-orphan">
        	<meta attribute="scope-set"></meta>
        	<key>
        		<column name="parent_folder_id" not-null="true"/>
        	</key>
        	<one-to-many class="org.pathwayeditor.businessobjects.hibernate.pojos.NonRootFolder"/>
        </set>
        
	    <joined-subclass name="org.pathwayeditor.businessobjects.hibernate.pojos.RootFolder" table="RootFolder">
	    	<meta attribute="class-code">
	private static final long serialVersionUID = 3780104587152506255L;

    public RootFolder(DataStore newDataStore, RootFolder other){
    	super(other);
    	dataStore = newDataStore;
    }
	
    public void changeDataStore(DataStore newDataStore){
	   DataStore oldDataStore = this.dataStore;
	   this.dataStore = newDataStore;
	   if(oldDataStore != null){
		   oldDataStore.setRootFolder(null);
	   }
	   if(this.dataStore != null){
		   this.dataStore.setRootFolder(this);
	   }
   }
    		</meta>
    		
	        <key column="id"/>
    	    <many-to-one name="dataStore" class="org.pathwayeditor.businessobjects.hibernate.pojos.DataStore">
	   	    	<meta attribute="use-in-equals">true</meta>
	        	<meta attribute="scope-set"></meta>
	    	    <column name="data_source_id" not-null="true" unique="true" />
        	</many-to-one>
    	</joined-subclass>
    	
	    <joined-subclass name="org.pathwayeditor.businessobjects.hibernate.pojos.NonRootFolder" table="NonRootFolder">
	    	<meta attribute="class-code">
    private static final long serialVersionUID = -7826318326217020101L;
	    	
    public NonRootFolder(Folder newParent, NonRootFolder other){
    	this.parentFolder = newParent;
    	this.name = other.name;
    }
	
    public void changeParentFolder(Folder newParentFolder){
	   Folder oldParentFolder = this.parentFolder;
	   this.parentFolder = newParentFolder;
	   if(oldParentFolder != null){
		   oldParentFolder.getSubFolders().remove(this);
	   }
	   if(this.parentFolder != null){
		   this.parentFolder.getSubFolders().add(this);
	   }
   }
	    	</meta>
	    	<key column="id"/>
	    	<properties name="xak1nonrootfolder" unique="true" >
        		<many-to-one name="parentFolder" class="org.pathwayeditor.businessobjects.hibernate.pojos.Folder">
		   	    	<meta attribute="use-in-equals">true</meta>
		        	<meta attribute="scope-set"></meta>
	            	<column name="parent_folder_id" not-null="true" />
    	    	</many-to-one>
	        	<property name="name" type="string">
		   	    	<meta attribute="use-in-equals">true</meta>
    	        	<column name="name" length="128" not-null="true" />
        		</property>
        	</properties>
    	</joined-subclass>
    </class>
</hibernate-mapping>
